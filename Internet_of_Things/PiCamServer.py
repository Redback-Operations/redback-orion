from flask import Flask, Response, render_template
from picamera2 import Picamera2
import numpy as np
import cv2
import time

app = Flask(__name__)

def init_camera():
    """Attempt to initialize the camera.
    
    Continuously tries to create a camera instance until successful. 
    If the camera is busy or an error occurs, it waits 2 seconds before retrying.
    """
    while True:
        try:
            picam2 = Picamera2()
            break  # Exit loop if camera initializes successfully
        except RuntimeError as e:
            print("Failed to initialize the camera. Trying again...")
            time.sleep(2)  # Delay before retrying to avoid rapid failure messages

    return picam2

def get_video_config(picam2):
    """Generate video configuration for the camera.
    
    Sets the video format and resolution. Here, the format is 'XRGB8888' (a standard RGB format),
    and the resolution is 640x480 pixels.
    """
    return picam2.create_video_configuration(main={"format": "XRGB8888", "size": (640, 480)})

def generate_frames(picam2):
    """Generator function to capture video frames.
    
    Configures the camera with the given settings, starts the camera, and then continuously
    captures frames, encoding them to JPEG format before yielding them one by one.
    Stops the camera when the function exits.
    """
    picam2.configure(get_video_config(picam2))
    picam2.start()
    try:
        while True:
            frame = picam2.capture_array()  # Capture frame as an array
            frame = cv2.cvtColor(np.array(frame), cv2.COLOR_RGB2BGR)  # Convert RGB to BGR
            ret, buffer = cv2.imencode('.jpg', frame)  # Encode frame to JPEG format
            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + buffer.tobytes() + b'\r\n')
    finally:
        picam2.stop()  # Ensure camera is stopped to release the resource

@app.route('/')
def index():
    """Home page route.
    
    Returns the HTML template for the homepage which includes the video stream.
    """
    return render_template('index.html')

@app.route('/video_feed')
def video_feed():
    """Video feed route.
    
    Initializes the camera and returns the response generated by the frame generator
    to stream video. The response's MIME type is set for multipart replacements.
    """
    picam2 = init_camera()  # Initialize the camera
    return Response(generate_frames(picam2), mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)  # nosec
    
